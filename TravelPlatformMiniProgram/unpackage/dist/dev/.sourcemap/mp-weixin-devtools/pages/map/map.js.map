{"version":3,"names":["_sfc_main","data","latitude","longitude","scale","markers","spotList","page","pageSize","loading","noMore","listHeight","isLocationReady","spot","polyline","onLoad","options","systemInfo","common_vendor","index","getSystemInfoSync","windowHeight","getCurrentLocation","getSpotList","id","getSpotInfo","methods","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","res","wrap","_callee$","_context","prev","next","er","callFunction","name","sortBy","sortOrder","sent","result","code","list","sort","a","b","distance","__f__","updateMarkers","t0","showToast","title","icon","stop","_this2","_callee2","_this2$spot$location$","_callee2$","_context2","location","coordinates","_slicedToArray2","iconPath","width","height","wxGetLocation","_this3","authorize","scope","success","getLocationInfo","fail","showModal","content","confirm","openSetting","useDefaultLocation","h5GetLocation","_this4","navigator","geolocation","getCurrentPosition","position","coords","error","appGetLocation","_this5","getLocation","type","err","length","map","getNearbySpots","_this6","_callee3","_res$result$data","total","_callee3$","_context3","abrupt","concat","_toConsumableArray2","loadMore","onMarkerTap","e","markerId","goToDetail","_id","openMapApp","_this$spot$location$c","openLocation","address","goToSearch","navigateTo","url","wx","createPage","MiniProgramPage"],"sources":["map.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWFwL21hcC52dWU"],"sourcesContent":["<template>\r\n\t<view class=\"container\">\r\n\t\t<!-- 搜索栏 -->\r\n\t\t<view class=\"search-box\">\r\n\t\t\t<view class=\"search-input\" @click=\"goToSearch\">\r\n\t\t\t\t<text class=\"iconfont icon-search\"></text>\r\n\t\t\t\t<text class=\"placeholder\">搜索景点/地点</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 地图容器 -->\r\n\t\t<map\r\n\t\t\tid=\"map\"\r\n\t\t\tclass=\"map\"\r\n\t\t\t:latitude=\"latitude\"\r\n\t\t\t:longitude=\"longitude\"\r\n\t\t\t:markers=\"markers\"\r\n\t\t\t:polyline=\"polyline\"\r\n\t\t\tscale=\"14\"\r\n\t\t\tshow-location\r\n\t\t></map>\r\n\t\t\r\n\t\t<view class=\"navigation-info\" v-if=\"spot\">\r\n\t\t\t<view class=\"spot-info\">\r\n\t\t\t\t<text class=\"name\">{{spot.name}}</text>\r\n\t\t\t\t<text class=\"address\">{{spot.address}}</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"navigation-btn\" @click=\"openMapApp\">\r\n\t\t\t\t<text class=\"iconfont icon-navigation\"></text>\r\n\t\t\t\t<text>导航</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 景点列表 -->\r\n\t\t<scroll-view \r\n\t\t\tclass=\"spot-list\" \r\n\t\t\tscroll-y\r\n\t\t\t:style=\"{ height: listHeight + 'px' }\"\r\n\t\t\t@scrolltolower=\"loadMore\"\r\n\t\t>\r\n\t\t\t<view class=\"spot-item\" v-for=\"(item, index) in spotList\" :key=\"index\" @click=\"goToDetail(item._id)\">\r\n\t\t\t\t<image class=\"spot-image\" :src=\"item.imageUrl\" mode=\"aspectFill\"></image>\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<view class=\"name-box\">\r\n\t\t\t\t\t\t<text class=\"name\">{{item.name}}</text>\r\n\t\t\t\t\t\t<text class=\"distance\" v-if=\"item.distance\">{{item.distance.toFixed(1)}}km</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"rating\">\r\n\t\t\t\t\t\t<text class=\"score\">{{item.rating}}分</text>\r\n\t\t\t\t\t\t<text class=\"price\">¥{{item.price}}起</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"address\">{{item.address}}</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"nav-btn\" @click.stop=\"openMap(item)\">\r\n\t\t\t\t\t<text class=\"iconfont icon-navigation\"></text>\r\n\t\t\t\t\t<text>导航</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 加载更多 -->\r\n\t\t\t<view class=\"loading\" v-if=\"loading\">\r\n\t\t\t\t<text>正在加载...</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"no-more\" v-if=\"noMore\">\r\n\t\t\t\t<text>没有更多了</text>\r\n\t\t\t</view>\r\n\t\t</scroll-view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\r\n/**\r\n * 地图页面\r\n * @description 展示景点在地图上的位置，支持导航\r\n */\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tlatitude: 39.909, // 默认纬度（北京）\r\n\t\t\tlongitude: 116.397, // 默认经度（北京）\r\n\t\t\tscale: 12, // 缩放级别\r\n\t\t\tmarkers: [], // 地图标记点\r\n\t\t\tspotList: [], // 景点列表\r\n\t\t\tpage: 1,\r\n\t\t\tpageSize: 10,\r\n\t\t\tloading: false,\r\n\t\t\tnoMore: false,\r\n\t\t\tlistHeight: 400, // 列表高度，单位px\r\n\t\t\tisLocationReady: false, // 位置是否就绪\r\n\t\t\tspot: null,\r\n\t\t\tpolyline: []\r\n\t\t}\r\n\t},\r\n\tonLoad(options) {\r\n\t\t// 获取列表容器高度\r\n\t\tconst systemInfo = uni.getSystemInfoSync()\r\n\t\tthis.listHeight = systemInfo.windowHeight - 350\r\n\t\t\r\n\t\t// 获取位置信息\r\n\t\tthis.getCurrentLocation()\r\n\t\t\r\n\t\t// 获取景点列表\r\n\t\tthis.getSpotList()\r\n\t\t\r\n\t\t// 获取景点信息\r\n\t\tif (options.id) {\r\n\t\t\tthis.getSpotInfo(options.id)\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t// 获取景点列表\r\n\t\tasync getSpotList() {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await uniCloud.callFunction({\r\n\t\t\t\t\tname: 'get-spots',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tlongitude: this.longitude,\r\n\t\t\t\t\t\tlatitude: this.latitude,\r\n\t\t\t\t\t\tpage: 1,\r\n\t\t\t\t\t\tpageSize: 10,\r\n\t\t\t\t\t\tsortBy: 'distance',\r\n\t\t\t\t\t\tsortOrder: 'asc'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tif (res.result.code === 0) {\r\n\t\t\t\t\tthis.spotList = res.result.data.list\r\n\t\t\t\t\t//将spotList的数据以distance正向排序\r\n\t\t\t\t\tthis.spotList.sort((a, b) => a.distance - b.distance)\t\r\n\t\t\t\t\tconsole.log(\"景点列表\",this.spotList)\r\n\t\t\t\t\tthis.updateMarkers()\r\n\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('获取景点列表失败:', e)\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '获取景点列表失败',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// 获取景点信息\r\n\t\tasync getSpotInfo(id) {\r\n\t\t\ttry {\r\n\r\n\t\t\t\tconst res = await uniCloud.callFunction({\r\n\t\t\t\t\tname: 'get-spot-detail',\r\n\t\t\t\t\tdata: { id }\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tif (res.result.code === 0) {\r\n\t\t\t\t\tthis.spot = res.result.data\r\n\t\t\t\t\t// 添加标记点\r\n\t\t\t\t\tif (this.spot.location && this.spot.location.coordinates) {\r\n\t\t\t\t\t\tconst [longitude, latitude] = this.spot.location.coordinates\r\n\t\t\t\t\t\tthis.markers = [{\r\n\t\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\t\tlatitude,\r\n\t\t\t\t\t\t\tlongitude,\r\n\t\t\t\t\t\t\ttitle: this.spot.name,\r\n\t\t\t\t\t\t\ticonPath: '/static/icons/park.png',\r\n\t\t\t\t\t\t\twidth: 32,\r\n\t\t\t\t\t\t\theight: 32\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('获取景点信息失败:', e)\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '获取景点信息失败',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 获取当前位置\r\n\t\tgetCurrentLocation() {\r\n\t\t\t// #ifdef MP-WEIXIN\r\n\t\t\tthis.wxGetLocation()\r\n\t\t\t// #endif\r\n\t\t\t\r\n\t\t\t// #ifdef H5\r\n\t\t\tthis.h5GetLocation()\r\n\t\t\t// #endif\r\n\t\t\t\r\n\t\t\t// #ifdef APP-PLUS\r\n\t\t\tthis.appGetLocation()\r\n\t\t\t// #endif\r\n\t\t},\r\n\t\t\r\n\t\t// 微信小程序获取位置\r\n\t\twxGetLocation() {\r\n\t\t\tuni.authorize({\r\n\t\t\t\tscope: 'scope.userLocation',\r\n\t\t\t\tsuccess: () => {\r\n\t\t\t\t\tthis.getLocationInfo()\r\n\t\t\t\t},\r\n\t\t\t\tfail: () => {\r\n\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\ttitle: '提示',\r\n\t\t\t\t\t\tcontent: '需要获取您的地理位置，请确认授权',\r\n\t\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\t\t\tuni.openSetting()\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.useDefaultLocation()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t// H5获取位置\r\n\t\th5GetLocation() {\r\n\t\t\tif (navigator.geolocation) {\r\n\t\t\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\t\t(position) => {\r\n\t\t\t\t\t\tthis.latitude = position.coords.latitude\r\n\t\t\t\t\t\tthis.longitude = position.coords.longitude\r\n\t\t\t\t\t\tthis.isLocationReady = true\r\n\t\t\t\t\t\tthis.updateMarkers()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tconsole.error('获取位置失败:', error)\r\n\t\t\t\t\t\tthis.useDefaultLocation()\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tthis.useDefaultLocation()\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// APP获取位置\r\n\t\tappGetLocation() {\r\n\t\t\tthis.getLocationInfo()\r\n\t\t},\r\n\t\t\r\n\t\t// 统一获取位置信息\r\n\t\tgetLocationInfo() {\r\n\t\t\tuni.getLocation({\r\n\t\t\t\ttype: 'gcj02',\r\n\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\tthis.latitude = res.latitude\r\n\t\t\t\t\tthis.longitude = res.longitude\r\n\t\t\t\t\tthis.isLocationReady = true\r\n\t\t\t\t\tthis.updateMarkers()\r\n\t\t\t\t},\r\n\t\t\t\tfail: (err) => {\r\n\t\t\t\t\tconsole.error('获取位置失败:', err)\r\n\t\t\t\t\tthis.useDefaultLocation()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t// 使用默认位置（北京）\r\n\t\tuseDefaultLocation() {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '未能获取位置，使用默认位置',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t})\r\n\t\t\tthis.isLocationReady = true\r\n\t\t\tthis.updateMarkers()\r\n\t\t},\r\n\t\t\r\n\t\t// 更新地图标记\r\n\t\tupdateMarkers() {\r\n\t\t\tif (this.spotList.length > 0) {\r\n\t\t\t\tthis.markers = this.spotList.map((spot, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: index,\r\n\t\t\t\t\t\tlatitude: spot.location.coordinates[1],\r\n\t\t\t\t\t\tlongitude: spot.location.coordinates[0],\r\n\t\t\t\t\t\ttitle: spot.name,\r\n\t\t\t\t\t\ticonPath: '/static/icons/park.png',\r\n\t\t\t\t\t\twidth: 32,\r\n\t\t\t\t\t\theight: 32\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// 获取附近景点\r\n\t\tasync getNearbySpots() {\r\n\t\t\tif (this.loading || this.noMore) return\r\n\t\t\tthis.loading = true\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await uniCloud.callFunction({\r\n\t\t\t\t\tname: 'get-spots',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tlongitude: this.longitude,\r\n\t\t\t\t\t\tlatitude: this.latitude,\r\n\t\t\t\t\t\tpage: this.page,\r\n\t\t\t\t\t\tpageSize: this.pageSize,\r\n\t\t\t\t\t\tsortBy: 'distance',\r\n\t\t\t\t\t\tsortOrder: 'asc'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tif (res.result.code === 0) {\r\n\t\t\t\t\tconst { list, total } = res.result.data\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新景点列表\r\n\t\t\t\t\tif (this.page === 1) {\r\n\t\t\t\t\t\tthis.spotList = list\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.spotList = [...this.spotList, ...list]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新地图标记\r\n\t\t\t\t\tthis.updateMarkers()\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 检查是否还有更多数据\r\n\t\t\t\t\tthis.noMore = this.spotList.length >= total\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '获取景点失败',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.loading = false\r\n\t\t},\r\n\t\t\r\n\t\t// 加载更多\r\n\t\tloadMore() {\r\n\t\t\tif (!this.noMore) {\r\n\t\t\t\tthis.page++\r\n\t\t\t\tthis.getNearbySpots()\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// 标记点点击事件\r\n\t\tonMarkerTap(e) {\r\n\t\t\tconst spot = this.spotList[e.markerId - 1]\r\n\t\t\tif (spot) {\r\n\t\t\t\tthis.goToDetail(spot._id)\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// 打开地图应用进行导航\r\n\t\topenMapApp() {\r\n\t\t\tif (!this.spot || !this.spot.location) return\r\n\t\t\t\r\n\t\t\tconst [longitude, latitude] = this.spot.location.coordinates\r\n\t\t\tuni.openLocation({\r\n\t\t\t\tlatitude,\r\n\t\t\t\tlongitude,\r\n\t\t\t\tname: this.spot.name,\r\n\t\t\t\taddress: this.spot.address,\r\n\t\t\t\tsuccess: () => {\r\n\t\t\t\t\tconsole.log('打开导航成功')\r\n\t\t\t\t},\r\n\t\t\t\tfail: () => {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '打开导航失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t// 跳转到搜索页\r\n\t\tgoToSearch() {\r\n\t\t\tuni.navigateTo({\r\n\t\t\t\turl: '/pages/spots/search'\r\n\t\t\t})\r\n\t\t},\r\n\t\t\r\n\t\t// 跳转到详情页\r\n\t\tgoToDetail(id) {\r\n\t\t\tuni.navigateTo({\r\n\t\t\t\turl: `/pages/spots/detail?id=${id}`\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.container {\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n}\r\n\r\n.search-box {\r\n\tpadding: 20rpx 30rpx;\r\n\tbackground-color: #2B9939;\r\n\theight: 100rpx;\r\n\tbox-sizing: border-box;\r\n\t\r\n\t.search-input {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\theight: 60rpx;\r\n\t\tpadding: 0 30rpx;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tborder-radius: 30rpx;\r\n\t\t\r\n\t\t.icon-search {\r\n\t\t\tfont-size: 32rpx;\r\n\t\t\tcolor: #666;\r\n\t\t\tmargin-right: 10rpx;\r\n\t\t}\r\n\t\t\r\n\t\t.placeholder {\r\n\t\t\tfont-size: 28rpx;\r\n\t\t\tcolor: #999;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.map {\r\n\twidth: 100%;\r\n\theight: 50vh;\r\n}\r\n\r\n.navigation-info {\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbackground-color: #fff;\r\n\tpadding: 30rpx;\r\n\tborder-radius: 24rpx 24rpx 0 0;\r\n\tbox-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.1);\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\t\r\n\t.spot-info {\r\n\t\tflex: 1;\r\n\t\tmargin-right: 20rpx;\r\n\t\t\r\n\t\t.name {\r\n\t\t\tfont-size: 32rpx;\r\n\t\t\tcolor: #333;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tmargin-bottom: 10rpx;\r\n\t\t\t@include text-ellipsis;\r\n\t\t}\r\n\t\t\r\n\t\t.address {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #666;\r\n\t\t\t@include text-ellipsis;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.navigation-btn {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 20rpx;\r\n\t\t\r\n\t\t.iconfont {\r\n\t\t\tfont-size: 48rpx;\r\n\t\t\tcolor: #007AFF;\r\n\t\t\tmargin-bottom: 10rpx;\r\n\t\t}\r\n\t\t\r\n\t\ttext {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #007AFF;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.spot-list {\r\n\tflex: 1;\r\n\tbackground-color: #f5f5f5;\r\n\tpadding: 20rpx;\r\n\t\r\n\t.spot-item {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 20rpx;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 12rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\t\r\n\t\t.spot-image {\r\n\t\t\twidth: 160rpx;\r\n\t\t\theight: 160rpx;\r\n\t\t\tborder-radius: 8rpx;\r\n\t\t\tmargin-right: 20rpx;\r\n\t\t}\r\n\t\t\r\n\t\t.info {\r\n\t\t\tflex: 1;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\t\r\n\t\t\t.name-box {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-bottom: 10rpx;\r\n\t\t\t\t\r\n\t\t\t\t.name {\r\n\t\t\t\t\tfont-size: 32rpx;\r\n\t\t\t\t\tcolor: #333;\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.distance {\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tcolor: #999;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.rating {\r\n\t\t\t\tmargin-bottom: 10rpx;\r\n\t\t\t\t\r\n\t\t\t\t.score {\r\n\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\tcolor: #FF9500;\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t\tmargin-right: 20rpx;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.price {\r\n\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\tcolor: #FF5B05;\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.address {\r\n\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\tcolor: #666;\r\n\t\t\t\t@include text-ellipsis;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t.nav-btn {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\tmargin-left: 20rpx;\r\n\t\t\tpadding: 0 20rpx;\r\n\t\t\t\r\n\t\t\t.iconfont {\r\n\t\t\t\tfont-size: 40rpx;\r\n\t\t\t\tcolor: #2B9939;\r\n\t\t\t\tmargin-bottom: 4rpx;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttext {\r\n\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\tcolor: #2B9939;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.loading, .no-more {\r\n\tpadding: 30rpx;\r\n\ttext-align: center;\r\n\t\r\n\ttext {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999;\r\n\t}\r\n}\r\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/ranjiangtaoprogram/first/TravelPlatformMiniProgram/pages/map/map.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}