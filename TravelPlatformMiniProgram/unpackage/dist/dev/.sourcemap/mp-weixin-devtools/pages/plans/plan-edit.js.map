{"version":3,"names":["_sfc_main","data","isEdit","planId","planData","title","description","start_date","end_date","spots","status","is_public","statusOptions","currentSpotIndex","currentDateIndex","currentSpotNotes","onLoad","options","app","getApp","globalData","checkLoginStatus","id","getPlanDetail","now","Date","getTime","endDate","setDate","getDate","methods","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","userId","res","wrap","_callee$","_context","prev","next","common_vendor","index","showLoading","getUserId","er","callFunction","name","action","plan_id","user_id","sent","result","code","showToast","message","icon","setTimeout","navigateBack","t0","__f__","hideLoading","finish","stop","savePlan","_this2","_callee2","_callee2$","_context2","abrupt","plan","_objectSpread2","pages","getCurrentPages","prevPage","length","route","$vm","getPlans","onStartDateChange","e","dateStr","detail","value","selectedDate","today","setHours","onEndDateChange","onStatusChange","parseInt","onPublicChange","navigateToSpotSelect","navigateTo","url","concat","addSpot","spotData","_this3","existingSpot","find","spot","spot_id","formatDate","visit_date","visitDate","startDate","push","sort","a","b","indexOf","editSpotNotes","dateIndex","spotIndex","groupedSpots","notes","$refs","notesPopup","open","confirmSpotNotes","findIndex","s","closeNotesPopup","close","removeSpot","_this4","showModal","content","confirmColor","success","confirm","splice","timestamp","date","getFullYear","String","getMonth","padStart","computed","_this5","groups","forEach","dateKey","Object","values","wx","createPage","MiniProgramPage"],"sources":["plan-edit.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcGxhbnMvcGxhbi1lZGl0LnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<view class=\"form-container\">\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">计划标题</text>\n\t\t\t\t<input \n\t\t\t\t\tclass=\"input\" \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tv-model=\"planData.title\" \n\t\t\t\t\tplaceholder=\"请输入计划标题\" \n\t\t\t\t\tmaxlength=\"100\"\n\t\t\t\t/>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">计划描述</text>\n\t\t\t\t<textarea \n\t\t\t\t\tclass=\"textarea\" \n\t\t\t\t\tv-model=\"planData.description\" \n\t\t\t\t\tplaceholder=\"请输入计划描述\" \n\t\t\t\t\tmaxlength=\"500\"\n\t\t\t\t></textarea>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">开始日期</text>\n\t\t\t\t<picker \n\t\t\t\t\tmode=\"date\" \n\t\t\t\t\t:value=\"formatDate(planData.start_date)\" \n\t\t\t\t\t@change=\"onStartDateChange\"\n\t\t\t\t>\n\t\t\t\t\t<view class=\"picker-value\">\n\t\t\t\t\t\t<text>{{ formatDate(planData.start_date) || '请选择开始日期' }}</text>\n\t\t\t\t\t\t<uni-icons type=\"arrowright\" size=\"16\" color=\"#999999\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</picker>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">结束日期</text>\n\t\t\t\t<picker \n\t\t\t\t\tmode=\"date\" \n\t\t\t\t\t:value=\"formatDate(planData.end_date)\" \n\t\t\t\t\t@change=\"onEndDateChange\"\n\t\t\t\t>\n\t\t\t\t\t<view class=\"picker-value\">\n\t\t\t\t\t\t<text>{{ formatDate(planData.end_date) || '请选择结束日期' }}</text>\n\t\t\t\t\t\t<uni-icons type=\"arrowright\" size=\"16\" color=\"#999999\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</picker>\n\t\t\t</view>\n\t\t\t\n\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">是否公开</text>\n\t\t\t\t<switch \n\t\t\t\t\t:checked=\"planData.is_public\" \n\t\t\t\t\t@change=\"onPublicChange\" \n\t\t\t\t\tcolor=\"#007AFF\"\n\t\t\t\t/>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item spots-section\">\n\t\t\t\t<view class=\"spots-header\">\n\t\t\t\t\t<text class=\"label\">景点列表</text>\n\t\t\t\t\t<view class=\"add-spot-btn\" @click=\"navigateToSpotSelect\">\n\t\t\t\t\t\t<uni-icons type=\"plusempty\" size=\"16\" color=\"#007AFF\"></uni-icons>\n\t\t\t\t\t\t<text>添加景点</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view v-if=\"planData.spots && planData.spots.length > 0\" class=\"spots-list\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tv-for=\"(date, dateIndex) in groupedSpots\" \n\t\t\t\t\t\t:key=\"date.date\" \n\t\t\t\t\t\tclass=\"date-group\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<view class=\"date-header\">\n\t\t\t\t\t\t\t<text>{{formatDate(date.date)}}</text>\n\t\t\t\t\t\t\t<text class=\"spot-count\">({{date.spots.length}}个景点)</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tv-for=\"(spot, spotIndex) in date.spots\" \n\t\t\t\t\t\t\t:key=\"spotIndex\" \n\t\t\t\t\t\t\tclass=\"spot-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<view class=\"spot-info\">\n\t\t\t\t\t\t\t\t<text class=\"spot-name\">{{ spot.spot_detail ? spot.spot_detail.name : '未知景点' }}</text>\n\t\t\t\t\t\t\t\t<view class=\"spot-date\">\n\t\t\t\t\t\t\t\t\t<text>游览顺序：</text>\n\t\t\t\t\t\t\t\t\t<text>{{spotIndex + 1}}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<view class=\"spot-actions\">\n\t\t\t\t\t\t\t\t<view class=\"action-btn edit\" @click=\"editSpotNotes(dateIndex, spotIndex)\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"compose\" size=\"16\" color=\"#007AFF\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"action-btn delete\" @click=\"removeSpot(dateIndex, spotIndex)\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"trash\" size=\"16\" color=\"#FF3B30\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view v-else class=\"empty-spots\">\n\t\t\t\t\t<text>暂无景点，点击\"添加景点\"按钮添加</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<view class=\"btn-group\">\n\t\t\t<button class=\"btn cancel\" @click=\"navigateBack\">取消</button>\n\t\t\t<button class=\"btn save\" @click=\"savePlan\">保存</button>\n\t\t</view>\n\t\t\n\t\t<!-- 景点备注编辑弹窗 -->\n\t\t<uni-popup ref=\"notesPopup\" type=\"dialog\">\n\t\t\t<uni-popup-dialog\n\t\t\t\tmode=\"input\"\n\t\t\t\ttitle=\"景点备注\"\n\t\t\t\tplaceholder=\"请输入景点游览备注\"\n\t\t\t\t:value=\"currentSpotNotes\"\n\t\t\t\t@confirm=\"confirmSpotNotes\"\n\t\t\t\t@close=\"closeNotesPopup\"\n\t\t\t></uni-popup-dialog>\n\t\t</uni-popup>\n\t</view>\n</template>\n\n<script>\n\t/**\n\t * 旅行计划编辑页面\n\t * @description 用于创建新的旅行计划或编辑现有计划\n\t */\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tisEdit: false,\n\t\t\t\tplanId: '',\n\t\t\t\tplanData: {\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tstart_date: '',\n\t\t\t\t\tend_date: '',\n\t\t\t\t\tspots: [],\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tis_public: false\n\t\t\t\t},\n\t\t\t\tstatusOptions: ['计划中', '进行中', '已完成'],\n\t\t\t\tcurrentSpotIndex: -1,\n\t\t\t\tcurrentDateIndex: -1,\n\t\t\t\tcurrentSpotNotes: ''\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\t// 页面加载时检查登录状态\n\t\t\tconst app = getApp();\n\t\t\tapp.globalData.checkLoginStatus(true); // 强制跳转，因为编辑功能必须登录\n\t\t\t\n\t\t\tif (options.id) {\n\t\t\t\tthis.isEdit = true;\n\t\t\t\tthis.planId = options.id;\n\t\t\t\tthis.getPlanDetail();\n\t\t\t} else {\n\t\t\t\t// 新建计划，设置默认值\n\t\t\t\tconst now = new Date();\n\t\t\t\tthis.planData.start_date = now.getTime();\n\t\t\t\t\n\t\t\t\t// 默认结束日期为开始日期后7天\n\t\t\t\tconst endDate = new Date(now);\n\t\t\t\tendDate.setDate(endDate.getDate() + 7);\n\t\t\t\tthis.planData.end_date = endDate.getTime();\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t/**\n\t\t\t * 获取计划详情\n\t\t\t */\n\t\t\tasync getPlanDetail() {\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '加载中...'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconst app = getApp();\n\t\t\t\t\tconst userId = app.globalData.getUserId();\n\t\t\t\t\t\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'manage-plans',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'get',\n\t\t\t\t\t\t\tplan_id: this.planId,\n\t\t\t\t\t\t\tuser_id: userId\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (res.result.code === 0) {\n\t\t\t\t\t\tthis.planData = res.result.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: res.result.message || '获取计划详情失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('获取计划详情失败', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '获取计划详情失败，请稍后重试',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t}, 1500);\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 保存计划\n\t\t\t */\n\t\t\tasync savePlan() {\n\t\t\t\t// 表单验证\n\t\t\t\tif (!this.planData.title) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '请输入计划标题',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!this.planData.start_date) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '请选择开始日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!this.planData.end_date) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '请选择结束日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.planData.start_date > this.planData.end_date) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '开始日期不能晚于结束日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: this.isEdit ? '更新中...' : '创建中...'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconst app = getApp();\n\t\t\t\t\tconst userId = app.globalData.getUserId();\n\t\t\t\t\t\n\t\t\t\t\tconst action = this.isEdit ? 'update' : 'create';\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\taction,\n\t\t\t\t\t\tplan: { ...this.planData },\n\t\t\t\t\t\tuser_id: userId\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif (this.isEdit) {\n\t\t\t\t\t\tdata.plan_id = this.planId;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'manage-plans',\n\t\t\t\t\t\tdata: data\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (res.result.code === 0) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: this.isEdit ? '更新成功' : '创建成功'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 返回上一页并刷新列表\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tconst pages = getCurrentPages();\n\t\t\t\t\t\t\tconst prevPage = pages[pages.length - 2];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 如果上一页是计划列表页，刷新列表\n\t\t\t\t\t\t\tif (prevPage && prevPage.route === 'pages/plans/plans') {\n\t\t\t\t\t\t\t\tprevPage.$vm.getPlans(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: res.result.message || (this.isEdit ? '更新失败' : '创建失败'),\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(this.isEdit ? '更新计划失败' : '创建计划失败', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: (this.isEdit ? '更新' : '创建') + '失败，请稍后重试',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 开始日期变更\n\t\t\t */\n\t\t\tonStartDateChange(e) {\n\t\t\t\tconst dateStr = e.detail.value;\n\t\t\t\tconst selectedDate = new Date(dateStr);\n\t\t\t\tconst today = new Date();\n\t\t\t\ttoday.setHours(0, 0, 0, 0);\n\t\t\t\t\n\t\t\t\tif (selectedDate < today) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '开始日期不能早于今天',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.planData.start_date = selectedDate.getTime();\n\t\t\t\t\n\t\t\t\t// 如果结束日期早于开始日期，自动调整结束日期\n\t\t\t\tif (this.planData.end_date && this.planData.end_date < this.planData.start_date) {\n\t\t\t\t\tthis.planData.end_date = this.planData.start_date;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 结束日期变更\n\t\t\t */\n\t\t\tonEndDateChange(e) {\n\t\t\t\tconst dateStr = e.detail.value;\n\t\t\t\tconst selectedDate = new Date(dateStr);\n\t\t\t\tconst today = new Date();\n\t\t\t\ttoday.setHours(0, 0, 0, 0);\n\t\t\t\t\n\t\t\t\tif (selectedDate < today) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '结束日期不能早于今天',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.planData.start_date && selectedDate < new Date(this.planData.start_date)) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '结束日期不能早于开始日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.planData.end_date = selectedDate.getTime();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 状态变更\n\t\t\t */\n\t\t\tonStatusChange(e) {\n\t\t\t\tthis.planData.status = parseInt(e.detail.value);\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 是否公开变更\n\t\t\t */\n\t\t\tonPublicChange(e) {\n\t\t\t\tthis.planData.is_public = e.detail.value;\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 跳转到景点选择页面\n\t\t\t */\n\t\t\tnavigateToSpotSelect() {\n\t\t\t\tif (!this.planData.start_date || !this.planData.end_date) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '请先选择计划的开始和结束日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/plans/spot-select?startDate=${this.planData.start_date}&endDate=${this.planData.end_date}`\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 添加景点到计划中\n\t\t\t * @param {Object} spotData 景点数据\n\t\t\t */\n\t\t\taddSpot(spotData) {\n\t\t\t\tif (!this.planData.spots) {\n\t\t\t\t\tthis.planData.spots = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 检查是否已添加该景点\n\t\t\t\tconst existingSpot = this.planData.spots.find(spot => \n\t\t\t\t\tspot.spot_id === spotData.spot_id && \n\t\t\t\t\tthis.formatDate(spot.visit_date) === this.formatDate(spotData.visit_date)\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tif (existingSpot) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '该景点已在同一天添加过',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 验证游览日期是否在计划日期范围内\n\t\t\t\tconst visitDate = new Date(spotData.visit_date);\n\t\t\t\tconst startDate = new Date(this.planData.start_date);\n\t\t\t\tconst endDate = new Date(this.planData.end_date);\n\t\t\t\t\n\t\t\t\tif (visitDate < startDate || visitDate > endDate) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '游览日期必须在计划日期范围内',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.planData.spots.push(spotData);\n\t\t\t\t\n\t\t\t\t// 按日期和添加顺序排序\n\t\t\t\tthis.planData.spots.sort((a, b) => {\n\t\t\t\t\tif (a.visit_date === b.visit_date) {\n\t\t\t\t\t\treturn this.planData.spots.indexOf(a) - this.planData.spots.indexOf(b);\n\t\t\t\t\t}\n\t\t\t\t\treturn a.visit_date - b.visit_date;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '添加成功',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 编辑景点备注\n\t\t\t */\n\t\t\teditSpotNotes(dateIndex, spotIndex) {\n\t\t\t\tthis.currentDateIndex = dateIndex;\n\t\t\t\tthis.currentSpotIndex = spotIndex;\n\t\t\t\tconst spot = this.groupedSpots[dateIndex].spots[spotIndex];\n\t\t\t\tthis.currentSpotNotes = spot.notes || '';\n\t\t\t\tthis.$refs.notesPopup.open();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 确认景点备注\n\t\t\t */\n\t\t\tconfirmSpotNotes(value) {\n\t\t\t\tif (this.currentDateIndex >= 0 && this.currentSpotIndex >= 0) {\n\t\t\t\t\tconst spot = this.groupedSpots[this.currentDateIndex].spots[this.currentSpotIndex];\n\t\t\t\t\tconst spotIndex = this.planData.spots.findIndex(s => \n\t\t\t\t\t\ts.spot_id === spot.spot_id && \n\t\t\t\t\t\ts.visit_date === spot.visit_date\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\tif (spotIndex >= 0) {\n\t\t\t\t\t\tthis.planData.spots[spotIndex].notes = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.closeNotesPopup();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 关闭备注弹窗\n\t\t\t */\n\t\t\tcloseNotesPopup() {\n\t\t\t\tthis.currentDateIndex = -1;\n\t\t\t\tthis.currentSpotIndex = -1;\n\t\t\t\tthis.currentSpotNotes = '';\n\t\t\t\tthis.$refs.notesPopup.close();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 移除景点\n\t\t\t */\n\t\t\tremoveSpot(dateIndex, spotIndex) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '确认移除',\n\t\t\t\t\tcontent: '确定要从计划中移除此景点吗？',\n\t\t\t\t\tconfirmColor: '#FF3B30',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tconst spot = this.groupedSpots[dateIndex].spots[spotIndex];\n\t\t\t\t\t\t\tconst index = this.planData.spots.findIndex(s => \n\t\t\t\t\t\t\t\ts.spot_id === spot.spot_id && \n\t\t\t\t\t\t\t\ts.visit_date === spot.visit_date\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\tthis.planData.spots.splice(index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 返回上一页\n\t\t\t */\n\t\t\tnavigateBack() {\n\t\t\t\tuni.navigateBack();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 格式化日期\n\t\t\t * @param {Number|String} timestamp 时间戳\n\t\t\t * @return {String} 格式化后的日期\n\t\t\t */\n\t\t\tformatDate(timestamp) {\n\t\t\t\tif (!timestamp) return '';\n\t\t\t\tconst date = new Date(timestamp);\n\t\t\t\treturn `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * 按日期分组的景点列表\n\t\t\t */\n\t\t\tgroupedSpots() {\n\t\t\t\tif (!this.planData.spots || !this.planData.spots.length) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 按日期分组\n\t\t\t\tconst groups = {};\n\t\t\t\tthis.planData.spots.forEach(spot => {\n\t\t\t\t\tconst dateKey = this.formatDate(spot.visit_date);\n\t\t\t\t\tif (!groups[dateKey]) {\n\t\t\t\t\t\tgroups[dateKey] = {\n\t\t\t\t\t\t\tdate: spot.visit_date,\n\t\t\t\t\t\t\tspots: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tgroups[dateKey].spots.push(spot);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 转换为数组并按日期排序\n\t\t\t\treturn Object.values(groups).sort((a, b) => a.date - b.date);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.container {\n\t\tpadding: 30rpx;\n\t\tbackground-color: #f5f5f5;\n\t\tmin-height: 100vh;\n\t}\n\t\n\t.form-container {\n\t\tbackground-color: #ffffff;\n\t\tborder-radius: 20rpx;\n\t\tpadding: 30rpx;\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.form-item {\n\t\tmargin-bottom: 30rpx;\n\t\t\n\t\t.label {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #333333;\n\t\t\tmargin-bottom: 10rpx;\n\t\t}\n\t\t\n\t\t.input, .textarea {\n\t\t\twidth: 100%;\n\t\t\tbackground-color: #f5f5f5;\n\t\t\tborder-radius: 10rpx;\n\t\t\tpadding: 20rpx;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #333333;\n\t\t}\n\t\t\n\t\t.textarea {\n\t\t\theight: 200rpx;\n\t\t}\n\t\t\n\t\t.picker-value {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tbackground-color: #f5f5f5;\n\t\t\tborder-radius: 10rpx;\n\t\t\tpadding: 20rpx;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #333333;\n\t\t}\n\t}\n\t\n\t.spots-section {\n\t\t.spots-header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tmargin-bottom: 20rpx;\n\t\t\t\n\t\t\t.add-spot-btn {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tcolor: #007AFF;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tmargin-left: 6rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.spots-list {\n\t\t\t.date-group {\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\t\n\t\t\t\t.date-header {\n\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\tcolor: #333333;\n\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\t\n\t\t\t\t\t.spot-count {\n\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\tcolor: #666666;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.spot-item {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tpadding: 20rpx;\n\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\tborder-radius: 10rpx;\n\t\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\t\t\n\t\t\t\t\t.spot-info {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.spot-name {\n\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\tcolor: #333333;\n\t\t\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.spot-date {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\tcolor: #666666;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.spot-actions {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.action-btn {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\twidth: 60rpx;\n\t\t\t\t\t\t\theight: 60rpx;\n\t\t\t\t\t\t\tmargin-left: 10rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.empty-spots {\n\t\t\tpadding: 30rpx 0;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #999999;\n\t\t}\n\t}\n\t\n\t.btn-group {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t\n\t\t.btn {\n\t\t\tflex: 1;\n\t\t\theight: 80rpx;\n\t\t\tline-height: 80rpx;\n\t\t\tborder-radius: 40rpx;\n\t\t\tfont-size: 30rpx;\n\t\t\t\n\t\t\t&.cancel {\n\t\t\t\tmargin-right: 20rpx;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\tcolor: #666666;\n\t\t\t}\n\t\t\t\n\t\t\t&.save {\n\t\t\t\tbackground-color: #007AFF;\n\t\t\t\tcolor: #ffffff;\n\t\t\t}\n\t\t}\n\t}\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/ranjiangtaoprogram/first/TravelPlatformMiniProgram/pages/plans/plan-edit.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}