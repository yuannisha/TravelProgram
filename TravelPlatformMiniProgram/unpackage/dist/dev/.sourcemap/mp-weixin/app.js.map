{"version":3,"file":"app.js","sources":["App.vue"],"sourcesContent":["<script>\n\texport default {\n\t\tonLaunch: function() {\n\t\t\tconsole.log('App Launch')\n\t\t\t// 监听网络状态\n\t\t\tuni.onNetworkStatusChange(function(res) {\n\t\t\t\tif (!res.isConnected) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '网络连接已断开',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\t// 启动时检查登录状态\n\t\t\tthis.globalData.checkLoginStatus(false);\n\t\t},\n\t\tonShow: function() {\n\t\t\tconsole.log('App Show')\n\t\t},\n\t\tonHide: function() {\n\t\t\tconsole.log('App Hide')\n\t\t},\n\t\tonError: function(err) {\n\t\t\tconsole.error('App Error:', err)\n\t\t\t// 可以添加错误上报逻辑\n\t\t},\n\t\t// 全局方法\n\t\tglobalData: {\n\t\t\t/**\n\t\t\t * 检查登录状态\n\t\t\t * @param {Boolean} redirect 是否重定向到登录页\n\t\t\t * @returns {Boolean} 是否已登录\n\t\t\t */\n\t\t\tcheckLoginStatus: function(redirect = true) {\n\t\t\t\tconst token = uni.getStorageSync('token');\n\t\t\t\tconst isLogin = !!token;\n\t\t\t\t\n\t\t\t\tif (!isLogin && redirect) {\n\t\t\t\t\t// 获取当前页面路径\n\t\t\t\t\tconst pages = getCurrentPages();\n\t\t\t\t\tconst currentPage = pages[pages.length - 1];\n\t\t\t\t\tconst currentRoute = currentPage ? currentPage.route : '';\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('当前页面路径:', currentRoute);\n\t\t\t\t\t\n\t\t\t\t\t// 保存当前页面路径，登录后可以返回\n\t\t\t\t\tif (currentRoute && !currentRoute.includes('/pages/user/login')) {\n\t\t\t\t\t\tuni.setStorageSync('loginRedirect', '/' + currentRoute);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 跳转到登录页面\n\t\t\t\t\tuni.navigateTo({\n\t\t\t\t\t\turl: '/pages/user/login'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn isLogin;\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 获取当前用户ID\n\t\t\t * @returns {String} 用户ID\n\t\t\t */\n\t\t\tgetUserId: function() {\n\t\t\t\tconst userInfo = uni.getStorageSync('userInfo');\n\t\t\t\tconsole.log(\"获取当前用户ID\",userInfo)\n\t\t\t\treturn userInfo ? userInfo.id : '';\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t/* 全局样式 */\n\tpage {\n\t\tbackground-color: $bg-color;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Helvetica,\n\t\t\tSegoe UI, Arial, Roboto, 'PingFang SC', 'miui', 'Hiragino Sans GB', 'Microsoft Yahei',\n\t\t\tsans-serif;\n\t}\n</style>\n"],"names":["uni"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACC,MAAK,YAAU;AAAA,EACd,UAAU,WAAW;AACpBA,kBAAAA,MAAY,MAAA,OAAA,gBAAA,YAAY;AAExBA,wBAAI,sBAAsB,SAAS,KAAK;AACvC,UAAI,CAAC,IAAI,aAAa;AACrBA,sBAAAA,MAAI,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,SACN;AAAA,MACF;AAAA,KACA;AAGD,SAAK,WAAW,iBAAiB,KAAK;AAAA,EACtC;AAAA,EACD,QAAQ,WAAW;AAClBA,kBAAAA,MAAY,MAAA,OAAA,iBAAA,UAAU;AAAA,EACtB;AAAA,EACD,QAAQ,WAAW;AAClBA,kBAAAA,MAAY,MAAA,OAAA,iBAAA,UAAU;AAAA,EACtB;AAAA,EACD,SAAS,SAAS,KAAK;AACtBA,kBAAAA,MAAc,MAAA,SAAA,iBAAA,cAAc,GAAG;AAAA,EAE/B;AAAA;AAAA,EAED,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMX,kBAAkB,SAAS,WAAW,MAAM;AAC3C,YAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AACxC,YAAM,UAAU,CAAC,CAAC;AAElB,UAAI,CAAC,WAAW,UAAU;AAEzB,cAAM,QAAQ;AACd,cAAM,cAAc,MAAM,MAAM,SAAS,CAAC;AAC1C,cAAM,eAAe,cAAc,YAAY,QAAQ;AAEvDA,sBAAY,MAAA,MAAA,OAAA,iBAAA,WAAW,YAAY;AAGnC,YAAI,gBAAgB,CAAC,aAAa,SAAS,mBAAmB,GAAG;AAChEA,wBAAAA,MAAI,eAAe,iBAAiB,MAAM,YAAY;AAAA,QACvD;AAGAA,sBAAAA,MAAI,WAAW;AAAA,UACd,KAAK;AAAA,QACN,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACP;AAAA;AAAA;AAAA;AAAA;AAAA,IAMD,WAAW,WAAW;AACrB,YAAM,WAAWA,cAAAA,MAAI,eAAe,UAAU;AAC9CA,oBAAAA,MAAA,MAAA,OAAA,iBAAY,YAAW,QAAQ;AAC/B,aAAO,WAAW,SAAS,KAAK;AAAA,IACjC;AAAA,EACD;AACD;;;;;;;;;"}