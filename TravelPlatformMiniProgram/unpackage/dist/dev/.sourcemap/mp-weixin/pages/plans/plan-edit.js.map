{"version":3,"file":"plan-edit.js","sources":["pages/plans/plan-edit.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcGxhbnMvcGxhbi1lZGl0LnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<view class=\"form-container\">\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">计划标题</text>\n\t\t\t\t<input \n\t\t\t\t\tclass=\"input\" \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tv-model=\"planData.title\" \n\t\t\t\t\tplaceholder=\"请输入计划标题\" \n\t\t\t\t\tmaxlength=\"100\"\n\t\t\t\t/>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">计划描述</text>\n\t\t\t\t<textarea \n\t\t\t\t\tclass=\"textarea\" \n\t\t\t\t\tv-model=\"planData.description\" \n\t\t\t\t\tplaceholder=\"请输入计划描述\" \n\t\t\t\t\tmaxlength=\"500\"\n\t\t\t\t></textarea>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">开始日期</text>\n\t\t\t\t<picker \n\t\t\t\t\tmode=\"date\" \n\t\t\t\t\t:value=\"formatDate(planData.start_date)\" \n\t\t\t\t\t@change=\"onStartDateChange\"\n\t\t\t\t>\n\t\t\t\t\t<view class=\"picker-value\">\n\t\t\t\t\t\t<text>{{ formatDate(planData.start_date) || '请选择开始日期' }}</text>\n\t\t\t\t\t\t<uni-icons type=\"arrowright\" size=\"16\" color=\"#999999\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</picker>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">结束日期</text>\n\t\t\t\t<picker \n\t\t\t\t\tmode=\"date\" \n\t\t\t\t\t:value=\"formatDate(planData.end_date)\" \n\t\t\t\t\t@change=\"onEndDateChange\"\n\t\t\t\t>\n\t\t\t\t\t<view class=\"picker-value\">\n\t\t\t\t\t\t<text>{{ formatDate(planData.end_date) || '请选择结束日期' }}</text>\n\t\t\t\t\t\t<uni-icons type=\"arrowright\" size=\"16\" color=\"#999999\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</picker>\n\t\t\t</view>\n\t\t\t\n\n\t\t\t\n\t\t\t<view class=\"form-item\">\n\t\t\t\t<text class=\"label\">是否公开</text>\n\t\t\t\t<switch \n\t\t\t\t\t:checked=\"planData.is_public\" \n\t\t\t\t\t@change=\"onPublicChange\" \n\t\t\t\t\tcolor=\"#007AFF\"\n\t\t\t\t/>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"form-item spots-section\">\n\t\t\t\t<view class=\"spots-header\">\n\t\t\t\t\t<text class=\"label\">景点列表</text>\n\t\t\t\t\t<view class=\"add-spot-btn\" @click=\"navigateToSpotSelect\">\n\t\t\t\t\t\t<uni-icons type=\"plusempty\" size=\"16\" color=\"#007AFF\"></uni-icons>\n\t\t\t\t\t\t<text>添加景点</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view v-if=\"planData.spots && planData.spots.length > 0\" class=\"spots-list\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tv-for=\"(date, dateIndex) in groupedSpots\" \n\t\t\t\t\t\t:key=\"date.date\" \n\t\t\t\t\t\tclass=\"date-group\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<view class=\"date-header\">\n\t\t\t\t\t\t\t<text>{{formatDate(date.date)}}</text>\n\t\t\t\t\t\t\t<text class=\"spot-count\">({{date.spots.length}}个景点)</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tv-for=\"(spot, spotIndex) in date.spots\" \n\t\t\t\t\t\t\t:key=\"spotIndex\" \n\t\t\t\t\t\t\tclass=\"spot-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<view class=\"spot-info\">\n\t\t\t\t\t\t\t\t<text class=\"spot-name\">{{ spot.spot_detail ? spot.spot_detail.name : '未知景点' }}</text>\n\t\t\t\t\t\t\t\t<view class=\"spot-date\">\n\t\t\t\t\t\t\t\t\t<text>游览顺序：</text>\n\t\t\t\t\t\t\t\t\t<text>{{spotIndex + 1}}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<view class=\"spot-actions\">\n\t\t\t\t\t\t\t\t<view class=\"action-btn edit\" @click=\"editSpotNotes(dateIndex, spotIndex)\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"compose\" size=\"16\" color=\"#007AFF\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"action-btn delete\" @click=\"removeSpot(dateIndex, spotIndex)\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"trash\" size=\"16\" color=\"#FF3B30\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view v-else class=\"empty-spots\">\n\t\t\t\t\t<text>暂无景点，点击\"添加景点\"按钮添加</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<view class=\"btn-group\">\n\t\t\t<button class=\"btn cancel\" @click=\"navigateBack\">取消</button>\n\t\t\t<button class=\"btn save\" @click=\"savePlan\">保存</button>\n\t\t</view>\n\t\t\n\t\t<!-- 景点备注编辑弹窗 -->\n\t\t<uni-popup ref=\"notesPopup\" type=\"dialog\">\n\t\t\t<uni-popup-dialog\n\t\t\t\tmode=\"input\"\n\t\t\t\ttitle=\"景点备注\"\n\t\t\t\tplaceholder=\"请输入景点游览备注\"\n\t\t\t\t:value=\"currentSpotNotes\"\n\t\t\t\t@confirm=\"confirmSpotNotes\"\n\t\t\t\t@close=\"closeNotesPopup\"\n\t\t\t></uni-popup-dialog>\n\t\t</uni-popup>\n\t</view>\n</template>\n\n<script>\n\t/**\n\t * 旅行计划编辑页面\n\t * @description 用于创建新的旅行计划或编辑现有计划\n\t */\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tisEdit: false,\n\t\t\t\tplanId: '',\n\t\t\t\tplanData: {\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tstart_date: '',\n\t\t\t\t\tend_date: '',\n\t\t\t\t\tspots: [],\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tis_public: false\n\t\t\t\t},\n\t\t\t\tstatusOptions: ['计划中', '进行中', '已完成'],\n\t\t\t\tcurrentSpotIndex: -1,\n\t\t\t\tcurrentDateIndex: -1,\n\t\t\t\tcurrentSpotNotes: ''\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\t// 页面加载时检查登录状态\n\t\t\tconst app = getApp();\n\t\t\tapp.globalData.checkLoginStatus(true); // 强制跳转，因为编辑功能必须登录\n\t\t\t\n\t\t\tif (options.id) {\n\t\t\t\tthis.isEdit = true;\n\t\t\t\tthis.planId = options.id;\n\t\t\t\tthis.getPlanDetail();\n\t\t\t} else {\n\t\t\t\t// 新建计划，设置默认值\n\t\t\t\tconst now = new Date();\n\t\t\t\tthis.planData.start_date = now.getTime();\n\t\t\t\t\n\t\t\t\t// 默认结束日期为开始日期后7天\n\t\t\t\tconst endDate = new Date(now);\n\t\t\t\tendDate.setDate(endDate.getDate() + 7);\n\t\t\t\tthis.planData.end_date = endDate.getTime();\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t/**\n\t\t\t * 获取计划详情\n\t\t\t */\n\t\t\tasync getPlanDetail() {\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '加载中...'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconst app = getApp();\n\t\t\t\t\tconst userId = app.globalData.getUserId();\n\t\t\t\t\t\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'manage-plans',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'get',\n\t\t\t\t\t\t\tplan_id: this.planId,\n\t\t\t\t\t\t\tuser_id: userId\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (res.result.code === 0) {\n\t\t\t\t\t\tthis.planData = res.result.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: res.result.message || '获取计划详情失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('获取计划详情失败', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '获取计划详情失败，请稍后重试',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t}, 1500);\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 保存计划\n\t\t\t */\n\t\t\tasync savePlan() {\n\t\t\t\t// 表单验证\n\t\t\t\tif (!this.planData.title) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '请输入计划标题',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!this.planData.start_date) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '请选择开始日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!this.planData.end_date) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '请选择结束日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.planData.start_date > this.planData.end_date) {\n\t\t\t\t\treturn uni.showToast({\n\t\t\t\t\t\ttitle: '开始日期不能晚于结束日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: this.isEdit ? '更新中...' : '创建中...'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconst app = getApp();\n\t\t\t\t\tconst userId = app.globalData.getUserId();\n\t\t\t\t\t\n\t\t\t\t\tconst action = this.isEdit ? 'update' : 'create';\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\taction,\n\t\t\t\t\t\tplan: { ...this.planData },\n\t\t\t\t\t\tuser_id: userId\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif (this.isEdit) {\n\t\t\t\t\t\tdata.plan_id = this.planId;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'manage-plans',\n\t\t\t\t\t\tdata: data\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (res.result.code === 0) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: this.isEdit ? '更新成功' : '创建成功'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 返回上一页并刷新列表\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tconst pages = getCurrentPages();\n\t\t\t\t\t\t\tconst prevPage = pages[pages.length - 2];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 如果上一页是计划列表页，刷新列表\n\t\t\t\t\t\t\tif (prevPage && prevPage.route === 'pages/plans/plans') {\n\t\t\t\t\t\t\t\tprevPage.$vm.getPlans(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: res.result.message || (this.isEdit ? '更新失败' : '创建失败'),\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(this.isEdit ? '更新计划失败' : '创建计划失败', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: (this.isEdit ? '更新' : '创建') + '失败，请稍后重试',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 开始日期变更\n\t\t\t */\n\t\t\tonStartDateChange(e) {\n\t\t\t\tconst dateStr = e.detail.value;\n\t\t\t\tconst selectedDate = new Date(dateStr);\n\t\t\t\tconst today = new Date();\n\t\t\t\ttoday.setHours(0, 0, 0, 0);\n\t\t\t\t\n\t\t\t\tif (selectedDate < today) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '开始日期不能早于今天',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.planData.start_date = selectedDate.getTime();\n\t\t\t\t\n\t\t\t\t// 如果结束日期早于开始日期，自动调整结束日期\n\t\t\t\tif (this.planData.end_date && this.planData.end_date < this.planData.start_date) {\n\t\t\t\t\tthis.planData.end_date = this.planData.start_date;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 结束日期变更\n\t\t\t */\n\t\t\tonEndDateChange(e) {\n\t\t\t\tconst dateStr = e.detail.value;\n\t\t\t\tconst selectedDate = new Date(dateStr);\n\t\t\t\tconst today = new Date();\n\t\t\t\ttoday.setHours(0, 0, 0, 0);\n\t\t\t\t\n\t\t\t\tif (selectedDate < today) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '结束日期不能早于今天',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.planData.start_date && selectedDate < new Date(this.planData.start_date)) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '结束日期不能早于开始日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.planData.end_date = selectedDate.getTime();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 状态变更\n\t\t\t */\n\t\t\tonStatusChange(e) {\n\t\t\t\tthis.planData.status = parseInt(e.detail.value);\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 是否公开变更\n\t\t\t */\n\t\t\tonPublicChange(e) {\n\t\t\t\tthis.planData.is_public = e.detail.value;\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 跳转到景点选择页面\n\t\t\t */\n\t\t\tnavigateToSpotSelect() {\n\t\t\t\tif (!this.planData.start_date || !this.planData.end_date) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '请先选择计划的开始和结束日期',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/plans/spot-select?startDate=${this.planData.start_date}&endDate=${this.planData.end_date}`\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 添加景点到计划中\n\t\t\t * @param {Object} spotData 景点数据\n\t\t\t */\n\t\t\taddSpot(spotData) {\n\t\t\t\tif (!this.planData.spots) {\n\t\t\t\t\tthis.planData.spots = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 检查是否已添加该景点\n\t\t\t\tconst existingSpot = this.planData.spots.find(spot => \n\t\t\t\t\tspot.spot_id === spotData.spot_id && \n\t\t\t\t\tthis.formatDate(spot.visit_date) === this.formatDate(spotData.visit_date)\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tif (existingSpot) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '该景点已在同一天添加过',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 验证游览日期是否在计划日期范围内\n\t\t\t\tconst visitDate = new Date(spotData.visit_date);\n\t\t\t\tconst startDate = new Date(this.planData.start_date);\n\t\t\t\tconst endDate = new Date(this.planData.end_date);\n\t\t\t\t\n\t\t\t\tif (visitDate < startDate || visitDate > endDate) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '游览日期必须在计划日期范围内',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.planData.spots.push(spotData);\n\t\t\t\t\n\t\t\t\t// 按日期和添加顺序排序\n\t\t\t\tthis.planData.spots.sort((a, b) => {\n\t\t\t\t\tif (a.visit_date === b.visit_date) {\n\t\t\t\t\t\treturn this.planData.spots.indexOf(a) - this.planData.spots.indexOf(b);\n\t\t\t\t\t}\n\t\t\t\t\treturn a.visit_date - b.visit_date;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '添加成功',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 编辑景点备注\n\t\t\t */\n\t\t\teditSpotNotes(dateIndex, spotIndex) {\n\t\t\t\tthis.currentDateIndex = dateIndex;\n\t\t\t\tthis.currentSpotIndex = spotIndex;\n\t\t\t\tconst spot = this.groupedSpots[dateIndex].spots[spotIndex];\n\t\t\t\tthis.currentSpotNotes = spot.notes || '';\n\t\t\t\tthis.$refs.notesPopup.open();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 确认景点备注\n\t\t\t */\n\t\t\tconfirmSpotNotes(value) {\n\t\t\t\tif (this.currentDateIndex >= 0 && this.currentSpotIndex >= 0) {\n\t\t\t\t\tconst spot = this.groupedSpots[this.currentDateIndex].spots[this.currentSpotIndex];\n\t\t\t\t\tconst spotIndex = this.planData.spots.findIndex(s => \n\t\t\t\t\t\ts.spot_id === spot.spot_id && \n\t\t\t\t\t\ts.visit_date === spot.visit_date\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\tif (spotIndex >= 0) {\n\t\t\t\t\t\tthis.planData.spots[spotIndex].notes = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.closeNotesPopup();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 关闭备注弹窗\n\t\t\t */\n\t\t\tcloseNotesPopup() {\n\t\t\t\tthis.currentDateIndex = -1;\n\t\t\t\tthis.currentSpotIndex = -1;\n\t\t\t\tthis.currentSpotNotes = '';\n\t\t\t\tthis.$refs.notesPopup.close();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 移除景点\n\t\t\t */\n\t\t\tremoveSpot(dateIndex, spotIndex) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '确认移除',\n\t\t\t\t\tcontent: '确定要从计划中移除此景点吗？',\n\t\t\t\t\tconfirmColor: '#FF3B30',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tconst spot = this.groupedSpots[dateIndex].spots[spotIndex];\n\t\t\t\t\t\t\tconst index = this.planData.spots.findIndex(s => \n\t\t\t\t\t\t\t\ts.spot_id === spot.spot_id && \n\t\t\t\t\t\t\t\ts.visit_date === spot.visit_date\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\tthis.planData.spots.splice(index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 返回上一页\n\t\t\t */\n\t\t\tnavigateBack() {\n\t\t\t\tuni.navigateBack();\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * 格式化日期\n\t\t\t * @param {Number|String} timestamp 时间戳\n\t\t\t * @return {String} 格式化后的日期\n\t\t\t */\n\t\t\tformatDate(timestamp) {\n\t\t\t\tif (!timestamp) return '';\n\t\t\t\tconst date = new Date(timestamp);\n\t\t\t\treturn `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * 按日期分组的景点列表\n\t\t\t */\n\t\t\tgroupedSpots() {\n\t\t\t\tif (!this.planData.spots || !this.planData.spots.length) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 按日期分组\n\t\t\t\tconst groups = {};\n\t\t\t\tthis.planData.spots.forEach(spot => {\n\t\t\t\t\tconst dateKey = this.formatDate(spot.visit_date);\n\t\t\t\t\tif (!groups[dateKey]) {\n\t\t\t\t\t\tgroups[dateKey] = {\n\t\t\t\t\t\t\tdate: spot.visit_date,\n\t\t\t\t\t\t\tspots: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tgroups[dateKey].spots.push(spot);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 转换为数组并按日期排序\n\t\t\t\treturn Object.values(groups).sort((a, b) => a.date - b.date);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.container {\n\t\tpadding: 30rpx;\n\t\tbackground-color: #f5f5f5;\n\t\tmin-height: 100vh;\n\t}\n\t\n\t.form-container {\n\t\tbackground-color: #ffffff;\n\t\tborder-radius: 20rpx;\n\t\tpadding: 30rpx;\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.form-item {\n\t\tmargin-bottom: 30rpx;\n\t\t\n\t\t.label {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #333333;\n\t\t\tmargin-bottom: 10rpx;\n\t\t}\n\t\t\n\t\t.input, .textarea {\n\t\t\twidth: 100%;\n\t\t\tbackground-color: #f5f5f5;\n\t\t\tborder-radius: 10rpx;\n\t\t\tpadding: 20rpx;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #333333;\n\t\t}\n\t\t\n\t\t.textarea {\n\t\t\theight: 200rpx;\n\t\t}\n\t\t\n\t\t.picker-value {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tbackground-color: #f5f5f5;\n\t\t\tborder-radius: 10rpx;\n\t\t\tpadding: 20rpx;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #333333;\n\t\t}\n\t}\n\t\n\t.spots-section {\n\t\t.spots-header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tmargin-bottom: 20rpx;\n\t\t\t\n\t\t\t.add-spot-btn {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tcolor: #007AFF;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tmargin-left: 6rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.spots-list {\n\t\t\t.date-group {\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\t\n\t\t\t\t.date-header {\n\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\tcolor: #333333;\n\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\t\n\t\t\t\t\t.spot-count {\n\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\tcolor: #666666;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.spot-item {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tpadding: 20rpx;\n\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\tborder-radius: 10rpx;\n\t\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\t\t\n\t\t\t\t\t.spot-info {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.spot-name {\n\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\tcolor: #333333;\n\t\t\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.spot-date {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\tcolor: #666666;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.spot-actions {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.action-btn {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\twidth: 60rpx;\n\t\t\t\t\t\t\theight: 60rpx;\n\t\t\t\t\t\t\tmargin-left: 10rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.empty-spots {\n\t\t\tpadding: 30rpx 0;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 28rpx;\n\t\t\tcolor: #999999;\n\t\t}\n\t}\n\t\n\t.btn-group {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t\n\t\t.btn {\n\t\t\tflex: 1;\n\t\t\theight: 80rpx;\n\t\t\tline-height: 80rpx;\n\t\t\tborder-radius: 40rpx;\n\t\t\tfont-size: 30rpx;\n\t\t\t\n\t\t\t&.cancel {\n\t\t\t\tmargin-right: 20rpx;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\tcolor: #666666;\n\t\t\t}\n\t\t\t\n\t\t\t&.save {\n\t\t\t\tbackground-color: #007AFF;\n\t\t\t\tcolor: #ffffff;\n\t\t\t}\n\t\t}\n\t}\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/ranjiangtaoprogram/first/TravelPlatformMiniProgram/pages/plans/plan-edit.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","uniCloud"],"mappings":"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"}